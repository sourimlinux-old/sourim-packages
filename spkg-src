#!/bin/bash

FLAG_FORCE=
MAKEPKG_OPTS="-q"

COMMAND=

mkdir -p output

show_err() {
    echo $@ 1>&2
    exit 2
}
usage() {
    echo "Usage: $0 COMMAND OPTIONS PACKAGE(s)"             1>&2
    echo "Commands:"                                        1>&2
    echo "  build         Build package from source"        1>&2
    echo "  build-all     Build all packages from source"   1>&2
    echo "  help          Show this message"                1>&2
    echo "Options:"                                         1>&2
    echo "  -f            Forced to build packages"         1>&2
    echo "  -v            Enable log output"                1>&2
    exit 1
}
if (($# < 1)); then
    usage
fi

COMMAND=$1

while getopts "fv" option; do
    case $option in
        f)   FLAG_FORCE=y   ;;
        v)   MAKEPKG_OPTS=""  ;;
    esac
done
shift $(( OPTIND ))


buildpkg() {
    [[ $1 == "-"* ]] && return
    [[ ! -f pkgs/$1 ]] && show_err "'$1' package not found"

    cd output || exit 1
        . ../pkgs/$1 || exit 1

        if [[ ! -f "$name-$version-`uname -m`.spkg" || ! -z "$FLAG_FORCE" ]]; then
            echo "Start building '$1'..."
            makepkg $MAKEPKG_OPTS ../pkgs/$1 || exit 1
        fi
    cd ..
}
build() {
    . pkgs/$1 || exit 1

    for depend in $depends; do
        build $depend
    done
    buildpkg $1
}
makeinfo() {
    cd output || exit 1
        spkg-rindex *.spkg || exit            
    cd ..
    echo "Writing repo info done."
}

rm -rf $HOME/.cache/spkg-makepkg/

case $COMMAND in
    build)
        shift 1
        [[ -z $@ ]] && show_err "error: nothing to build."

        for pkg in $@; do
            build $pkg
        done
        makeinfo
    ;;
    "build-all")
        for pkg in `ls pkgs`; do
            buildpkg $pkg
        done
        makeinfo
    ;;
    * | help)
        usage
    ;;
esac